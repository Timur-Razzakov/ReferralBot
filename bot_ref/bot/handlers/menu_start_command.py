from aiogram import Router, types
from aiogram.filters import CommandStart, CommandObject
from aiogram.fsm.context import FSMContext
from aiogram.types import BotCommand

from bot_ref.bot.handlers.check_data import check_user_chat_id
from bot_ref.bot.keyboards import default_kb, sign_inup_kb
from bot_ref.bot.loader import bot
from bot_ref.bot.utils import check_login, get_user_referral

"""–°–æ–∑–¥–∞—ë–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é, –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã """
bot_commands = {
    ('start', '–ù–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º'),
    ('help', '–ü–æ–º–æ—â—å –∏ —Å–ø—Ä–∞–≤–∫–∞', "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö")
}

commands_router = Router(name=__name__)


@commands_router.message
async def setup_bot_commands(*args, **kwargs):
    commands_for_bot = []
    for cmd in bot_commands:
        commands_for_bot.append(BotCommand(command=cmd[0], description=cmd[1]))
    await bot.set_my_commands(commands=commands_for_bot)


@commands_router.message(CommandStart())
async def cmd_start(message: types.Message, command: CommandObject = None, state: FSMContext = None):
    # await find_user_transaction()
    user_id = message.chat.id
    args = command.args  # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Å—ã–ª–∫–∏
    if await check_login(user_id):
        await message.answer(
            '–í—Ö–æ–¥ –±—ã–ª <b>—É—Å–ø–µ—à–Ω–æ</b> –≤—ã–ø–æ–ª–Ω–µ–Ω ‚≠êÔ∏è',
            reply_markup=default_kb.markup
        )
    else:
        if args is not None:
            user_data = await check_user_chat_id(args)
            if user_data:
                if args == str(user_id):
                    await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π 'invite_code', –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ ‚Ü©Ô∏è")
                else:
                    await message.answer("–£—Ä–∞!! –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å –±—ã—Å—Ç—Ä–µ–µ —Ä–µ–≥–∞–π—Å—è!")
                    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å–ø–∏—Å–∫—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                    referral_data = await get_user_referral(user_id)
                    referral_data.user_id = user_id
                    referral_data.sender_link_id = args
            else:
                await bot.send_message(chat_id=user_id,
                                       text='–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞!!!!')
        try:
            await bot.send_message(chat_id=user_id,
                                   text=f"–ü—Ä–∏–≤–µ—Ç ‚úã {message.chat.first_name}!\n\n"
                                        f" –î–ª—è –Ω–∞—á–∞–ª–∞ <b>–Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>, "
                                        "–∏–Ω–∞—á–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã!\n\n"
                                        "–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'</b> –∏–ª–∏ <b>–í–æ–π—Ç–∏ üëã</b>",
                                   reply_markup=sign_inup_kb.markup)
        except:
            await message.reply(text="–ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ "
                                     "https://t.me/tg")
