from aiogram import types, Router, F
from aiogram.filters import Command, CommandObject, CommandStart
from aiogram.fsm.context import FSMContext
from asgiref.sync import sync_to_async
from django.db import router

from bot_ref.handlers.check_data import check_user_chat_id, my_router
from bot_ref.keyboards import sign_inup_kb, default_kb
from bot_ref.loader import bot, dp

HELP_TEXT = """
–ü—Ä–∏–≤–µ—Ç üëã, —è –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤! –£ –Ω–∞—Å –µ—Å—Ç—å —Ç–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∫:

<b>–ü–æ–º–æ—â—å ‚≠êÔ∏è</b> - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞
<b>–û–ø–∏—Å–∞–Ω–∏–µ üìå</> - –∞–¥—Ä–µ—Å, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
<b>–ê–¥–º–∏–Ω üëë</b> - –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

–ù–æ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω—É–∂–Ω–æ <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≤–æ–π—Ç–∏</b> –≤ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. 
–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'</b> –∏–ª–∏ <b>–í–æ–π—Ç–∏ üëã</b>
–ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–µ—Ç–µ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç <b>–Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã</b> üî¥

–†–∞–¥—ã —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ‚ù§Ô∏è
"""


class ReferralData:
    # —Ö—Ä–∞–Ω–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    def __init__(self):
        self.user_id = None
        self.sender_link_id = None  # id –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Å—ã–ª–∫–∏


referrals = {}


# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ referrals
@sync_to_async
def get_user_referral(user_id):
    if user_id not in referrals:
        referrals[user_id] = ReferralData()
    return referrals[user_id]


# –°–¥–µ–ª–∞–Ω –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
@dp.message(CommandStart())
async def cmd_start(message: types.Message, command: CommandObject, state: FSMContext):
    # await find_user_transaction()
    user_id = message.chat.id
    args = command.args  # –ø–æ–ª—É—á–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Å—ã–ª–∫–∏
    if args is not None:
        user_data = await check_user_chat_id(args)
        if user_data:
            if args == str(user_id):
                await message.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π 'invite_code', –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ ‚Ü©Ô∏è")
            else:
                await message.answer("–£—Ä–∞!! –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞, —Ç–µ–ø–µ—Ä—å –±—ã—Å—Ç—Ä–µ–µ —Ä–µ–≥–∞–π—Å—è!")
                # —Å–æ—Ö—Ä–∞–Ω—è–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫ —Å–ø–∏—Å–∫—É —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                referral_data = await get_user_referral(user_id)
                referral_data.user_id = user_id
                referral_data.sender_link_id = args
        else:
            await bot.send_message(chat_id=user_id,
                                   text='–î–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–µ–≤–µ—Ä–Ω–∞!!!!')
    try:
        await bot.send_message(chat_id=user_id,
                               text=f"–ü—Ä–∏–≤–µ—Ç ‚úã {message.chat.first_name}!\n\n"
                                    f" –î–ª—è –Ω–∞—á–∞–ª–∞ <b>–Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>, "
                                    "–∏–Ω–∞—á–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã!\n\n"
                                    "–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'</b> –∏–ª–∏ <b>–í–æ–π—Ç–∏ üëã</b>",
                               reply_markup=sign_inup_kb.markup)
    except:
        await message.reply(text="–ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ "
                                 "https://t.me/tg")


# @my_router.message(F.text == '–ü–æ–º–æ—â—å ‚≠êÔ∏è')
async def cmd_help(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text=HELP_TEXT, reply_markup=default_kb.markup)


@my_router.message(F.text == '–û–ø–∏—Å–∞–Ω–∏–µ üìå')
async def cmd_description(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="–ü—Ä–∏–≤–µ—Ç ‚úã, –ö–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç!!")


def default_handlers_register(router: Router) -> None:
    router.message.register(cmd_start, CommandStart())
    router.message.register(cmd_help, F.text == '–ü–æ–º–æ—â—å ‚≠êÔ∏è')
    router.message.register(cmd_description, F.text == '–û–ø–∏—Å–∞–Ω–∏–µ üìå')
